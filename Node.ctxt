#BlueJ class context
comment0.params=x\ y\ type
comment0.target=Node(int,\ int,\ char)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Node\r\n
comment1.params=
comment1.target=char\ getNodeType()
comment1.text=\r\n\ Gets\ the\ type\ of\ the\ node\r\n\r\n\ @param\ \ y\ \ \ a\ sample\ parameter\ for\ a\ method\r\n\ @return\ \ \ \ \ the\ sum\ of\ x\ and\ y\r\n
comment10.params=
comment10.target=int\ getX()
comment10.text=\r\n\ Returns\ the\ node's\ x\ coordinate\ as\ an\ int\r\n\r\n\ @return\ \ \ \ \ the\ x\ coord\r\n
comment11.params=
comment11.target=int\ getY()
comment11.text=\r\n\ Returns\ the\ node's\ y\ coordinate\ as\ an\ int\r\n\r\n\ @return\ \ \ \ \ the\ y\ coord\r\n
comment12.params=parent
comment12.target=void\ cameFrom(java.lang.String)
comment12.text=\r\n\ Tells\ this\ node\ how\ we\ got\ to\ it\r\n\r\n\ @param\ \ parent\ Coordinates\ of\ parent\ node.\r\n
comment13.params=newPath
comment13.target=void\ setPath(java.lang.String)
comment13.text=\r\n\ An\ example\ of\ a\ method\ -\ replace\ this\ comment\ with\ your\ own\r\n\r\n\ @param\ \ y\ \ \ a\ sample\ parameter\ for\ a\ method\r\n\ @return\ \ \ \ \ the\ sum\ of\ x\ and\ y\r\n
comment14.params=
comment14.target=java.lang.String\ getPath()
comment14.text=\r\n\ An\ example\ of\ a\ method\ -\ replace\ this\ comment\ with\ your\ own\r\n\r\n\ @param\ \ y\ \ \ a\ sample\ parameter\ for\ a\ method\r\n\ @return\ \ \ \ \ the\ sum\ of\ x\ and\ y\r\n
comment15.params=
comment15.target=java.lang.String\ getCameFrom()
comment15.text=\r\n\ Gets\ the\ node\ we\ used\ to\ get\ to\ this\ one.\r\n\r\n\ @return\ \ \ \ \ A\ string\ containing\ the\ node\ before\ this\ one\ in\ the\ path.\r\n
comment16.params=
comment16.target=java.util.LinkedHashMap\ getEdges()
comment16.text=\r\n\ Returns\ this\ node's\ edges,\ used\ to\ build\ the\ frontier.\r\n\r\n\ @return\ \ \ \ \ The\ node's\ edges.\r\n
comment17.params=newEdge
comment17.target=void\ addEdge(Edge)
comment17.text=\r\n\ Adds\ an\ Edge\ to\ a\ Node\ object\r\n\r\n
comment18.params=k
comment18.target=void\ removeEdge(java.lang.String)
comment18.text=\r\n\ Removes\ an\ edge,\ i.e\ if\ we\ discovered\ a\ mountain\ blocking\ it.\r\n\r\n\ @param\ \ k\ \ \ direction\ (key)\ of\ the\ edge\ to\ delete\r\n\ @return\ \ \ \ \ the\ sum\ of\ x\ and\ y\r\n
comment19.params=n1\ n2
comment19.target=int\ compare(Node,\ Node)
comment2.params=
comment2.target=int\ getCost()
comment2.text=\r\n\ Returns\ the\ cost\ to\ reach\ this\ node.\ Used\ to\ sort\ for\ UCS.\r\n\r\n\ @return\ the\ value\ of\ g\r\n
comment20.params=n1\ n2
comment20.target=int\ compare(Node,\ Node)
comment3.params=newCost
comment3.target=void\ setCost(int)
comment3.text=\r\n\ Sets\ the\ cost\ of\ a\ node.\r\n\r\n\ @param\ \ newCost\ \ \ the\ new\ cost\ for\ this\ node\r\n
comment4.params=
comment4.target=int\ getRealCost()
comment4.text=\r\n\ Gets\ the\ real\ cost\ of\ getting\ here\ from\ start,\ accounting\ for\ movement\r\n\r\n\ @return\ \ \ \ \ the\ movement\ cost\ to\ get\ here\ from\ the\ start.\r\n
comment5.params=newCost
comment5.target=void\ setRealCost(int)
comment5.text=\r\n\ Sets\ the\ real\ cost\ to\ get\ here\ from\ start\r\n\r\n\ @param\ \ newCost\ \ \ cost\ to\ get\ here\r\n
comment6.params=heuristic
comment6.target=void\ setHeuristic(int)
comment6.text=\r\n\ Sets\ the\ value\ of\ h\ for\ the\ node\r\n\r\n\ @param\ \ heuristic\ \ \ \ The\ new\ heuristic\r\n
comment7.params=
comment7.target=int\ getHeuristic()
comment7.text=\r\n\ Returns\ the\ value\ of\ h\ for\ a\ node\r\n\r\n\ @return\ the\ value\ of\ h\r\n
comment8.params=
comment8.target=int\ getFn()
comment8.text=\r\n\ Returns\ f(n)\ \=\ g(n)\ +\ h(n),\ used\ for\ A/A*\r\n\r\n\ \r\n\ @return\ \ \ \ \ the\ sum\ of\ g\ and\ n\r\n
comment9.params=
comment9.target=java.lang.String\ getCoords()
comment9.text=\r\n\ Returns\ a\ String\ representation\ of\ the\ Node's\ x\ and\ y\ coordinates\r\n\ e.g\ "1,1"\r\n\r\n\ @param\ \ y\ \ \ a\ sample\ parameter\ for\ a\ method\r\n\ @return\ \ \ \ \ the\ sum\ of\ x\ and\ y\r\n
numComments=21
