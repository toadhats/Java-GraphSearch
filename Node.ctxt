#BlueJ class context
comment0.params=x\ y\ type
comment0.target=Node(int,\ int,\ char)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Node\r\n
comment1.params=
comment1.target=int\ getCost()
comment1.text=\r\n\ Returns\ the\ cost\ to\ reach\ this\ node.\ Used\ to\ sort\ for\ UCS.\r\n\r\n\ @return\ the\ value\ of\ g\r\n
comment2.params=
comment2.target=int\ getHeuristic()
comment2.text=\r\n\ Returns\ the\ value\ of\ h\ for\ a\ node\r\n\r\n\ @return\ the\ value\ of\ h\r\n
comment3.params=
comment3.target=int\ getFn()
comment3.text=\r\n\ Returns\ f(n)\ \=\ g(n)\ +\ h(n),\ used\ for\ A/A*\r\n\r\n\ \r\n\ @return\ \ \ \ \ the\ sum\ of\ g\ and\ n\r\n
comment4.params=
comment4.target=java.lang.String\ getCoords()
comment4.text=\r\n\ Returns\ a\ String\ representation\ of\ the\ Node's\ x\ and\ y\ coordinates\r\n\ e.g\ "1,1"\r\n\r\n\ @param\ \ y\ \ \ a\ sample\ parameter\ for\ a\ method\r\n\ @return\ \ \ \ \ the\ sum\ of\ x\ and\ y\r\n
comment5.params=newEdge
comment5.target=void\ addEdge(Edge)
comment5.text=\r\n\ Adds\ an\ Edge\ to\ a\ Node\ object\r\n\r\n
comment6.params=n1\ n2
comment6.target=int\ compare(Node,\ Node)
comment7.params=n1\ n2
comment7.target=int\ compare(Node,\ Node)
numComments=8
